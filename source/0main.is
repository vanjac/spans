	.align  2
	.code   16
	.thumb_func
	.global	main
	.type   main, %function
main:
	@ setup interrupts

    LDR     reg_intr_handle:r0, =0x03007FFC
    LDR     intr_handle_ptr:r1, =intr_handle
    STR     intr_handle_ptr, [reg_intr_handle]

    LDR     reg_ie:r0, =0x04000200
    MOV     ie:r1, #1		@ vblank
    STRH    ie, [reg_ie]

    MOV     enable:r1, #1
    STRH    enable, [reg_ie, #0x08]         @ reg_ime

	@ setup screen

	LDR     reg_dispcnt:r0, =0x04000000
	LDR     value:r1, =(4 | (1<<10))
	STRH    value, [reg_dispcnt]
    LDR     vblank_irq:r1, =(1<<3)
    STRH    vblank_irq, [reg_dispcnt, #4]   @ reg_dispstat
	
	LDR     mem_palette:r0, =0x05000000
	LDR     color:r1, =0x001F
	STRH	color, [mem_palette, #2]
	LDR     color, =0x031F
	STRH	color, [mem_palette, #4]
	LDR     color, =0x03FF
	STRH	color, [mem_palette, #6]
	LDR     color, =0x03E0
	STRH	color, [mem_palette, #8]
	LDR     color, =0x7FE0
	STRH	color, [mem_palette, #10]
	LDR     color, =0x7C00
	STRH	color, [mem_palette, #12]
	LDR     color, =0x7C1F
	STRH	color, [mem_palette, #14]
	LDR     color, =0x6B5F
	STRH	color, [mem_palette, #16]

	MOV		theta:r5, #0
	LDR		draw_triangle_solid_fn:r7, =draw_triangle_solid

loop:
	BL		draw_frame
	B		loop

frame1:
	LDR		framebuffer:r0, =0x0600A000
	B		frameswap_contd

draw_frame:
	PUSH	{lr}

	LDR		reg_dispcnt:r1, =0x04000000
	LDRH	dispcnt_val:r3, [reg_dispcnt]
	MOV		bit_test:r2, #(1<<4)
	TST		dispcnt_val, bit_test
	BNE		frame1
	LDR		framebuffer:r0, =0x06000000		@ frame0
frameswap_contd:
	EOR		dispcnt_val, bit_test
	STRH	dispcnt_val, [reg_dispcnt]

	PUSH	{framebuffer}	@ to be used by triangle loop

	MOV		clear_color:r1, #0x00000000
	LDR		draw_cls_fn:r3, =draw_cls
    BL		draw_cls_thumb

	MOV		theta_tmp:r0, theta
	LDR		transform_points_fn:r6, =transform_points
	BL		transform_points_thumb
	ADD		theta, #1

	LDR		tri_i:r4, =triangles

triangle_loop:
	LDR		color:r6, =0x01010101
	.rept	8
		MOV		r0, tri_i
		LDR		r0, [r0]
		CMP		r0, #0
		BEQ		end_triangle_loop
		ADD		tri_i, #4

		MOV		r1, tri_i
		LDR		r1, [r1]
		ADD		tri_i, #4

		MOV		r2, tri_i
		LDR		r2, [r2]
		ADD		tri_i, #4

		MOV		r3, color
		LDR		color:r6, =0x01010101
		ADD		color, r3
		BL		draw_triangle_solid_thumb
	.endr
	B		triangle_loop
end_triangle_loop:
	ADD		sp, #4	@ pop framebuffer

	POP		{pc}

draw_cls_thumb:
	BX		draw_cls_fn:r3

transform_points_thumb:
	BX		transform_points_fn:r6

draw_triangle_solid_thumb:
	BX		draw_triangle_solid_fn

	.align	2
c_pal_bg:
	.word	0x00000000


    .section    .iwram, "ax", %progbits
    .align  2
    .code   32
    .arm
intr_handle:
    LDR     reg_if:r0, =0x04000202
    LDRH    irq:r1, [reg_if]
    STRH    irq, [reg_if]       @ acknowledge interrupts
    LDR     reg_ifbios:r0, =0x03007FF8
    STRH    irq, [reg_ifbios]	@ bios
    BX      lr
